name: Build Windows Executable with pnpm

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows-exe:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 安装 Node.js
    - name: Setup Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: 22.x

    # 安装 pnpm
    - name: Install pnpm
      run: npm install -g pnpm

    # 缓存 pnpm store
    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    # 安装依赖
    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    # 生成 dist 目录
    - name: Prepare dist directory
      run: mkdir dist

    # 获取完整 commit SHA 并写入 dist/commit.txt
    - name: Generate commit.txt
      run: echo ${{ github.sha }} > dist/commit.txt


    # 构建 Windows EXE
    - name: Build Windows executable
      run: |
        $outputName = "dist/star-resonance-damage-counter.exe"
        pnpm dlx @yao-pkg/pkg ./server.js `
          --targets node22-win-x64 `
          --output $outputName `
          --options max_old_space_size=4096
        if (Test-Path $outputName) {
          Write-Host "EXE generated successfully at $outputName"
        } else {
          Write-Error "EXE file not found!"
          exit 1
        }

    # 复制 public 到 dist 下
    - name: Copy static assets
      run: |
        xcopy /E /I public dist\public

    # 上传构建产物
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: StarResonanceDamageCounter
        path: dist